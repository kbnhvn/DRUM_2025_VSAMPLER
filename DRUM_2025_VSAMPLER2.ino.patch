--- a/DRUM_2025_VSAMPLER.ino
+++ b/DRUM_2025_VSAMPLER.ino
@@
-//#define ads_ok
+// (ADS1015 & rotary encoders désactivés)
 
@@
-/////////////////////////////// I2C POTS ADS1015
-#include <Adafruit_ADS1X15.h>
-#ifdef mylcd_type1
-  #define SDA_2 15  
-  #define SCL_2 16 
-#endif
-#ifdef mylcd_type2
-  #define SDA_2 17  
-  #define SCL_2 18 
-#endif
-
-TwoWire I2C_2 = TwoWire(1); // 2nd I2C port
-Adafruit_ADS1015 ads;
-int16_t adc0=0;
-int16_t adc1=0;
-int16_t adc2=0;
-int16_t adc3=0; 
-int16_t tmp_adc1;
-int16_t old_adc0=0;
-int16_t old_adc1=0;
-int16_t old_adc2=0;
-int16_t old_adc3=0;
-
-unsigned long previousMillis = 0;
-const long interval = 100; 
-
-int16_t adcValue0 = 0;
-int16_t adcValue1 = 0;
-int16_t adcValue2 = 0;
-int16_t adcValue3 = 0;
+// (ADS1015 et mesures ADC supprimées)
 
@@
-////////////////////////////// ROTARY
-#ifdef mylcd_type1 
-  #define CLK 9 // CLK ENCODER 
-  #define DT 14 // DT ENCODER
-  const byte pinBR1=5;
-#endif
-#ifdef mylcd_type2 
-  #define CLK 7 // CLK ENCODER 
-  #define DT 6 // DT ENCODER
-  const byte pinBR1=15;
-#endif
+////////////////////////////// ROTARY (encoders matériels non utilisés)
+// (si tu veux remettre des encodeurs un jour, réintroduire CLK/DT/pinBR1)
 
 byte ENC_PORT1=0;
 int counter1=0;
 int old_counter1=0;
 byte shiftR1=false;
 byte old_shiftR1=true;
 
@@
 void setup() {
@@
-  #ifdef ads_ok
-  // Iniciar el segundo puerto I2C
-  I2C_2.begin(SDA_2, SCL_2, 400000);
-
-  // Iniciar el ADS1015 en el segundo puerto I2C
-  if (!ads.begin(0x48, &I2C_2)) { // Dirección I2C por defecto del ADS1015/ADS1115
-    Serial.println("ADS1015 not found.");
-  } else {
-    Serial.println("ADS1015 init OK.");
-  }
-  #endif
+  // (pas d’ADS1015)
@@
-  #ifdef ads_ok
-  // Rotary
-  pinMode(pinBR1,INPUT_PULLUP);
-  pinMode(CLK,INPUT_PULLUP);
-  pinMode(DT,INPUT_PULLUP);
-  #endif
+  // (pas d’encodeurs matériels)
@@
   // BLEMidiServer.setOnDisconnectCallback([](){    
     //   Serial.println("Disconnected");
     // });
@@
   //MIDI.read();
-  #ifdef ads_ok
-  shiftR1=!digitalRead(pinBR1);
-  #endif
+  // shiftR1 reste logiciel (touch UI), pas de bouton physique ici.
@@
-  #ifdef ads_ok
-  READ_ENCODERS();
-  #endif
+  // pas d’encodeurs matériels à lire
   read_touch();
   DO_KEYPAD();
   REFRESH_KEYS();
   REFRESH_STATUS();
@@
   showLastTouched();
   clearLastTouched();
-  
-  #ifdef ads_ok
-  unsigned long currentMillis = millis();
-  if (currentMillis - previousMillis >= interval) {
-    previousMillis = currentMillis;
-    READ_POTS(); 
-  }
-  #endif
+  // pas de lecture pots/ADS périodique
@@
   if (flag_ss=true){
